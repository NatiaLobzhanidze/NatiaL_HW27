//
//  DetailedWeatherViewController.swift
//  NatiaL_HW27
//
//  Created by Natia's Mac on 31.08.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailedWeatherDisplayLogic: AnyObject
{
    func displaySomething(viewModel: DetailedWeather.ShowWeatherDetails.ViewModel)
}

class DetailedWeatherViewController: UIViewController, DetailedWeatherDisplayLogic
{
    var interactor: DetailedWeatherBusinessLogic?
    var router: (DetailedWeatherRoutingLogic & DetailedWeatherDataPassing)?
    
    private let cityName: UILabel = {
        let view = UILabel()
        return view
    }()
    
    private let temperature: UILabel = {
        let view = UILabel()
        return view
    }()
    
    private let humidity: UILabel = {
        let view = UILabel()
        return view
    }()
    
    private let descrip: UILabel = {
        let view = UILabel()
        return view
    }()
    
    // MARK: Object lifecycle
    
    init(interactor: DetailedWeatherBusinessLogic,router: (DetailedWeatherRoutingLogic & DetailedWeatherDataPassing) ) {
        self.interactor = interactor
        self.router = router
        super.init(nibName: nil, bundle: nil)
    }
    
    
    required init?(coder: NSCoder)
    {
        fatalError("init(coder:) has not been implemented")
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        interactor?.getDetails(request: DetailedWeather.ShowWeatherDetails.Request())
        setUpView()
    }
    
    // MARK: Private methods
    private func setUpView() {
        view.backgroundColor = .white
        let stackview = UIStackView(arrangedSubviews: [cityName, temperature, humidity, descrip])
        stackview.axis = .vertical
        view.addSubview(stackview)
        stackview.anchor( left: view.leftAnchor, right: view.rightAnchor, paddingLeft: 30,  paddingRight: 30)
        stackview.alignment = .center
        stackview.center(inView: view)
        
    }
    
    func displaySomething(viewModel: DetailedWeather.ShowWeatherDetails.ViewModel)
    {
        cityName.text = "Location - " + viewModel.name
        temperature.text = "Rounded Temperature - \(viewModel.temp.rounded())"
        humidity.text = "Humidity - \(viewModel.humidity)"
        descrip.text = "We Have - " + viewModel.desc
        
    }
}
