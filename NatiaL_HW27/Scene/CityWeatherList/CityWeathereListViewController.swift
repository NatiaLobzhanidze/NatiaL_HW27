//
//  CityWeathereListViewController.swift
//  NatiaL_HW27
//
//  Created by Natia's Mac on 30.08.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CityWeathereListDisplayLogic: AnyObject {
    func displayCityWeatherList(viewModel: CityWeathereList.ShowWeatherList.ViewModel)
}

class CityWeathereListViewController: UIViewController
{
 private var interactor: CityWeathereListBusinessLogic?
 private var router: (CityWeathereListRoutingLogic & CityWeathereListDataPassing)?

    
    // MARK: - View
    var weatherObject: WeatherResponse!
    
    private lazy var temperaturaLb: UILabel = {
        let lbl = UILabel()
   
        return lbl
    }()
    
    private lazy var detailsBtn: UIButton = {
        let btn = UIButton()
        btn.setTitle("See Details", for: .normal)
        btn.backgroundColor = .blue
        btn.addTarget(self, action: #selector(goToDetails), for: .touchUpInside)
        return btn
    }()
    
  // MARK: Object lifecycle
    init(interactor: CityWeathereListBusinessLogic, router: (CityWeathereListRoutingLogic & CityWeathereListDataPassing)) {
        self.interactor = interactor
        self.router = router
        super.init(nibName: nil, bundle: nil)
    }
   
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
  }
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
      
      interactor?.getWeatherInfo(request: CityWeathereList.ShowWeatherList.Request())
      setUpView()
  }
  
  // MARK: private func
    
    private func setUpView() {
        view.backgroundColor = .white
        view.addSubview(temperaturaLb)
        view.addSubview(detailsBtn)
        temperaturaLb.anchor(top: view.safeAreaLayoutGuide.topAnchor, left: view.leftAnchor, right: view.rightAnchor, paddingTop: 30, paddingLeft: 30, paddingRight: 30, height: 50)
        detailsBtn.anchor(top: temperaturaLb.bottomAnchor, left: view.leftAnchor, right: view.rightAnchor, paddingTop: 50, paddingLeft: 40, paddingRight: 50, height: 40)
    }
  
    @objc func goToDetails() {
       
        interactor?.didTapSeeDetails(request: CityWeathereList.showWeatherDetails.Request(weatherResponse: weatherObject))
        router?.navigateToCountryDetails()
    }
  //@IBOutlet weak var nameTextField: UITextField!
  
    private func setLabelData(data: String) {
        self.temperaturaLb.text = "Temperature in \(data)â„ƒ"
    }
  }

extension CityWeathereListViewController: CityWeathereListDisplayLogic {
    func displayCityWeatherList(viewModel: CityWeathereList.ShowWeatherList.ViewModel) {
        let str = viewModel.tempInCity.name + " " + viewModel.tempInCity.weather[0].description
        setLabelData(data: str)
        self.weatherObject = viewModel.tempInCity
    }
    
    
}
